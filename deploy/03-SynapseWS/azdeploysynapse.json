{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
        "name": {
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "defaultDataLakeStorageAccountName": {
            "type": "string"
        },
        "defaultDataLakeStorageFilesystemName": {
            "type": "string"
        },
		"allowSynapseADAuthOnly": {
			"type": "bool"
		},
        "sqlAdminLogin": {
            "type": "string"
        },
        "sqlAdminPassword": {
            "type": "secureString",
            "defaultValue": ""
        },
        "setWorkspaceIdentityRbacOnStorageAccount": {
            "type": "bool",
            "defaultValue": true
        },
        "allowAllConnections": {
            "type": "bool",
            "defaultValue": true
        },
        "subnetNameForAcls": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Subnet name to receive ACLS to connect to Synapse data lake storage"
            }
        },
        "grantWorkspaceIdentityControlForSql": {
            "type": "string",
            "defaultValue": "Enabled",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ]
        },
        "managedVirtualNetwork": {
            "type": "string",
            "defaultValue": "default",
            "allowedValues": [
                "default",
                ""
            ]
        },
        "tagValues": {
            "type": "object",
            "defaultValue": {}
        },
        "storageSubscriptionID": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "storageLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "storageRoleUniqueId": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "isNewStorageAccount": {
            "type": "bool",
            "defaultValue": true
        },
        "isNewFileSystemOnly": {
            "type": "bool",
            "defaultValue": true
        },
        "adlaResourceId": {
            "type": "string",
            "defaultValue": ""
        },
        "managedResourceGroupName": {
            "type": "string",
            "defaultValue": ""
        },
        "storageAccessTier": {
            "type": "string",
            "defaultValue": "Hot"
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_RAGRS"
        },
        "storageSupportsHttpsTrafficOnly": {
            "type": "bool",
            "defaultValue": true
        },
        "storageKind": {
            "type": "string",
            "defaultValue": "StorageV2"
        },
        "storageIsHnsEnabled": {
            "type": "bool",
            "defaultValue": true
        },
        "userObjectId": {
            "type": "string",
            "defaultValue": "" // Optional ID of user running the template deployment. Used to set a user's RBAC on storage. Pass from parent template.
        },
        "setSbdcRbacOnStorageAccount": {
            "type": "bool",
            "defaultValue": false     // used in conjunction with userObjectId
        },
        "setWorkspaceMsiByPassOnStorageAccount": {
            "type": "bool",
            "defaultValue": true
        },
        "workspaceStorageAccountProperties": {
            "type": "object",
            "defaultValue": {}
        },
        "managedVirtualNetworkSettings": {
            "type": "object"
        }
    },
    "variables": {
		"storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
        "defaultDataLakeStorageAccountUrl": "[concat('https://', parameters('defaultDataLakeStorageAccountName'), '.dfs.core.windows.net')]",
        "webEndpoint": "[concat('https://web.azuresynapse.net?workspace=%2fsubscriptions%2f', parameters('storageSubscriptionID'),'%2fresourceGroups%2f', parameters('location'),'%2fproviders%2fMicrosoft.Synapse%2fworkspaces%2f', parameters('name'))]",
        "devEndpoint": "[concat('https://', parameters('name'), '.dev.azuresynapse.net')]",
        "onDemandEndpoint": "[concat(parameters('name'), '-ondemand.sql.azuresynapse.net')]",
        "sqlEndpoint": "[concat(parameters('name'), '.sql.azuresynapse.net')]"
    },
    "resources": [
        {
            "apiVersion": "2019-06-01-preview",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Synapse/workspaces",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
                    "filesystem": "[parameters('defaultDataLakeStorageFilesystemName')]"
                },
				"azureADOnlyAuthentication": "[parameters('allowSynapseADAuthOnly')]",
                "sqlAdminLogin": "[parameters('sqlAdminLogin')]",
                "sqlAdminPassword": "[parameters('sqlAdminPassword')]",
                "adlaResourceId": "[parameters('adlaResourceId')]",
                "managedVirtualNetwork": "[parameters('managedVirtualNetwork')]",
                "managedResourceGroupName": "[parameters('managedResourceGroupName')]",
                "managedVirtualNetworkSettings": "[parameters('managedVirtualNetworkSettings')]"
            },
            "resources": [
                {
                    "condition": "[parameters('allowAllConnections')]",
                    "apiVersion": "2019-06-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "allowAll",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    },
                    "type": "firewallrules"
                },
                {
                    "apiVersion": "2019-06-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "default",
                    "properties": {
                        "grantSqlControlToManagedIdentity": {
                            "desiredState": "[parameters('grantWorkspaceIdentityControlForSql')]"
                        }
                    },
                    "type": "managedIdentitySqlControlSettings"
                }
            ],
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('defaultDataLakeStorageAccountName'))]",
                "[concat('Microsoft.Resources/deployments/', parameters('defaultDataLakeStorageFilesystemName'))]"
            ],
            "tags": "[parameters('tagValues')]"
        },
        {

            "condition": "[parameters('setWorkspaceIdentityRbacOnStorageAccount')]",
            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('defaultDataLakeStorageAccountName'))]"
            ],
            "name": "[concat(parameters('defaultDataLakeStorageAccountName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', parameters('name'), '/', parameters('storageRoleUniqueId'))))]",
            "location": "[parameters('storageLocation')]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
                "principalId": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('name')), '2019-06-01-preview', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }

        },
        { // This block does not work unless the user ID is passed in to template
            "condition": "[parameters('setSbdcRbacOnStorageAccount')]",
            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('defaultDataLakeStorageAccountName'))]"
            ],
            "name": "[concat(parameters('defaultDataLakeStorageAccountName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', parameters('userObjectId'), '/', parameters('storageRoleUniqueId'))))]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
                "principalId": "[parameters('userObjectId')]",
                "principalType": "User"
            }
        },
        {
            "condition": "[parameters('setWorkspaceMsiByPassOnStorageAccount')]",
            "apiVersion": "2019-05-01",
            "name": "UpdateStorageAccountNetworkingAcls",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2021-01-01",
                            "location": "[parameters('storageLocation')]",
                            "name": "[parameters('defaultDataLakeStorageAccountName')]",
                            "properties": "[parameters('workspaceStorageAccountProperties')]",
                            "kind": "[parameters('storageKind')]",
                            "sku": {
                                "name": "[parameters('storageAccountType')]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "condition": "[parameters('isNewStorageAccount')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('defaultDataLakeStorageAccountName')]",
            "apiVersion": "2019-04-01",
            "location": "[parameters('storageLocation')]",
            "properties": {
                "accessTier": "[parameters('storageAccessTier')]",
                "supportsHttpsTrafficOnly": "[parameters('storageSupportsHttpsTrafficOnly')]",
                "isHnsEnabled": "[parameters('storageIsHnsEnabled')]",
                "allowBlobPublicAccess": false,
                "networkAcls": {
                    // "virtualNetworkRules": [
                    //     {
                    //         "id": "[parameters('subnetNameForAcls')]",
                    //         "action": "Allow",
                    //         "state": "succeeded"
                    //     }
                    // ],
                    "defaultAction": "Deny"
                }
            },
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "[parameters('storageKind')]",
            "tags": {},
            "resources": [
                {
                    "condition": "[parameters('isNewStorageAccount')]",
                    "name": "[concat('default/', parameters('defaultDataLakeStorageFilesystemName'))]",
                    "type": "blobServices/containers",
                    "apiVersion": "2019-04-01",
                    "properties": {
                        "publicAccess": "None"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Storage/storageAccounts/', parameters('defaultDataLakeStorageAccountName'))]"
                    ]
                }
            ]
        },
        {
            "condition": "[parameters('isNewFileSystemOnly')]",
            "apiVersion": "2022-09-01",
            "name": "[parameters('defaultDataLakeStorageFilesystemName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                            "name": "[concat(parameters('defaultDataLakeStorageAccountName'), '/default/', parameters('defaultDataLakeStorageFilesystemName'))]",
                            "apiVersion": "2022-09-01",
                            "properties": {
                                "publicAccess": "None"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('defaultDataLakeStorageAccountName'))]"
            ]
        }
    ],
    "outputs": {
        "resourceGroupName": {
            "type": "string",
            "value": "[resourceGroup().name]"
        },
        "resourceGroupLocation": {
            "type": "string",
            "value": "[parameters('location')]"
        },
        "synapseWorkspaceName": {
            "type": "string",
            "value": "[parameters('name')]"
        },
        "defaultDataLakeStorageAccountName": {
            "type": "string",
            "value": "[parameters('defaultDataLakeStorageAccountName')]"
        },
        "synapseStorageString": {
            "type": "string",
            "value": "[concat(parameters('defaultDataLakeStorageAccountName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', parameters('name'), '/', parameters('storageRoleUniqueId'))))]"
        },
        "webEndpoint": {
            "type": "string",
            "value": "[variables('webEndpoint')]"
        },
        "devEndpoint": {
            "type": "string",
            "value": "[variables('devEndpoint')]"
        },
        "ondemandEndpoint": {
            "type": "string",
            "value": "[variables('ondemandEndpoint')]"
        },
        "sqlEndpoint": {
            "type": "string",
            "value": "[variables('sqlEndpoint')]"
        }
    }
}