{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "String"
        },
	    "allowSynapseADAuthOnly": {
			"type": "bool",
			"defaultValue": true,
			"metadata": {
				"description": "Allow Azure AD authentication only on all Workspace subresources."
			}
		},
        "sqlAdministratorLogin": {
            "type": "String",
            "defaultValue": "",
			"metadata": {
				"description": "SQL Auth admin login for Synapse WS and SQL. (If not AD Auth Only)"
			}
        },
        "sqlAdministratorPassword": {
            "type": "secureString",
            "defaultValue": "",
			"metadata": {
				"description": "SQL Auth admin password for Synapse WS and SQL. (If not AD Auth Only)"
			}
        },
        "setWorkspaceIdentityRbacOnStorageAccount": {
            "type": "bool",
            "defaultValue": true
        },
        "allowNSGManagementSynapseNetworkTraffic": {
            "type": "bool",
            "defaultValue": true
        },
        "grantWorkspaceIdentityControlForSql": {
            "type": "String",
            "defaultValue": "Enabled"
        },
        "managedVirtualNetwork": {
            "type": "String",
            "defaultValue": ""
        },
        "dataLakeStorageAccountName": {
            "type": "String"
        },
        "dataLakeStorageFilesystemName": {
            "type": "String"
        },
        "dataLakeStorageAccountType": {
            "type": "String",
            "defaultValue": "Standard_RAGRS"
        },
        "dataLakeStorageAccountKind": {
            "type": "String",
            "defaultValue": "StorageV2"
        },
        "dataLakeStorageAccountSubscriptionID": {
            "type": "String",
            "defaultValue": "[subscription().subscriptionId]"
        },
        "dataLakeStorageAccountLocation": {
            "type": "String",
            "defaultValue": "[resourceGroup().location]"
        },
        "dataLakeStorageAccountRoleUniqueId": {
            "type": "String",
            "defaultValue": "[newGuid()]"
        },
        "isNewStorageAccount": {
            "type": "bool",
            "defaultValue": true
        },
        "isNewFileSystemOnly": {
            "type": "bool",
            "defaultValue": true
        },
        "adlaResourceId": {
            "type": "String",
            "defaultValue": ""
        },
        "managedResourceGroupName": {
            "type": "String",
            "defaultValue": ""
        },
        "dataLakeStorageAccountAccessTier": {
            "type": "String",
            "defaultValue": "Hot"
        },
		"dataLakeMinimumTlsVersion": {
			"type": "String",
			"defaultValue": "TLS1_2"
		},
        "storageSupportsHttpsTrafficOnly": {
            "type": "bool",
            "defaultValue": true
        },
        "storageIsHnsEnabled": {
            "type": "bool",
            "defaultValue": true
        },
        "setWorkspaceMsiByPassOnStorageAccount": {
            "type": "bool",
            "defaultValue": true
        },
        "workspaceStorageAccountProperties": {
            "type": "object",
            "defaultValue": {}
        },
        "managedVirtualNetworkSettings": {
            "type": "object"
        }
    },
    "variables": {
		"synapseResourceLocation": "[parameters('dataLakeStorageAccountLocation')]",
        "storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
		"storageBlobDataContributorRole": "[concat('/subscriptions/', parameters('dataLakeStorageAccountSubscriptionID'), '/providers/Microsoft.Authorization/roleDefinitions/', variables('storageBlobDataContributorRoleID'))]",
        "defaultDataLakeStorageAccountUrl": "[concat('https://', parameters('dataLakeStorageAccountName'), '.dfs.core.windows.net')]",
        "webEndpoint": "[concat('https://web.azuresynapse.net?workspace=%2fsubscriptions%2f', parameters('dataLakeStorageAccountSubscriptionID'), '%2fresourceGroups%2f', variables('synapseResourceLocation'),'%2fproviders%2fMicrosoft.Synapse%2fworkspaces%2f', parameters('name'))]",
        "devEndpoint": "[concat('https://', parameters('name'), '.dev.azuresynapse.net')]",
        "onDemandEndpoint": "[concat(parameters('name'), '-ondemand.sql.azuresynapse.net')]",
        "sqlEndpoint": "[concat(parameters('name'), '.sql.azuresynapse.net')]",
	    "allowSynapseADAuthOnlyBool": "[bool(parameters('allowSynapseADAuthOnly'))]",
        "isNewStorageAccountBool": "[bool(parameters('isNewStorageAccount'))]",
        "isNewFileSystemOnlyBool": "[bool(parameters('isNewFileSystemOnly'))]",
        "storageSupportsHttpsTrafficOnlyBool": "[bool(parameters('storageSupportsHttpsTrafficOnly'))]",
        "storageIsHnsEnabledBool": "[bool(parameters('storageIsHnsEnabled'))]",
        "setWorkspaceMsiByPassOnStorageAccountBool": "[bool(parameters('setWorkspaceMsiByPassOnStorageAccount'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[parameters('name')]",
            "location": "[variables('synapseResourceLocation')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
                    "filesystem": "[parameters('dataLakeStorageFilesystemName')]"
                },
				"azureADOnlyAuthentication": "[variables('allowSynapseADAuthOnlyBool')]",
                "sqlAdminLogin": "[parameters('sqlAdministratorLogin')]",
                "sqlAdminPassword": "[parameters('sqlAdministratorPassword')]",
                "adlaResourceId": "[parameters('adlaResourceId')]",
                "managedVirtualNetwork": "[parameters('managedVirtualNetwork')]",
                "managedResourceGroupName": "[parameters('managedResourceGroupName')]",
                "managedVirtualNetworkSettings": "[parameters('managedVirtualNetworkSettings')]"
            },
            "resources": [
                {
                    "apiVersion": "2021-06-01",
                    "condition": "[parameters('allowNSGManagementSynapseNetworkTraffic')]",
                    "dependsOn": [
                        "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
                    ],
                    "location": "[variables('synapseResourceLocation')]",
                    "name": "allowAll",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    },
                    "type": "firewallrules"
                },
                {
                    "apiVersion": "2021-06-01",
                    "dependsOn": [
                        "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
                    ],
                    "location": "[variables('synapseResourceLocation')]",
                    "name": "default",
                    "properties": {
                        "grantSqlControlToManagedIdentity": {
                            "desiredState": "[parameters('grantWorkspaceIdentityControlForSql')]"
                        }
                    },
                    "type": "managedIdentitySqlControlSettings"
                }
            ],
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('dataLakeStorageAccountName'))]",
                "[concat('Microsoft.Resources/deployments/', parameters('dataLakeStorageFilesystemName'))]"
            ]
        },
		{
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[variables('storageBlobDataContributorRoleID')]",
            "condition": "[parameters('setWorkspaceIdentityRbacOnStorageAccount')]",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('dataLakeStorageAccountName'))]"
            ],
            "scope": "[concat('Microsoft.Storage/storageAccounts', '/', parameters('dataLakeStorageAccountName'))]",
            "properties": {
                "roleDefinitionId": "[variables('storageBlobDataContributorRole')]",
                "principalId": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('name')), '2021-06-01', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "condition": "[variables('setWorkspaceMsiByPassOnStorageAccountBool')]",
            "name": "UpdateStorageAccountNetworkingAcls",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2022-09-01",
                            "location": "[parameters('dataLakeStorageAccountLocation')]",
                            "name": "[parameters('dataLakeStorageAccountName')]",
                            "properties": "[parameters('workspaceStorageAccountProperties')]",
                            "kind": "[parameters('dataLakeStorageAccountKind')]",
                            "sku": {
                                "name": "[parameters('dataLakeStorageAccountType')]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-09-01",
            "condition": "[variables('isNewStorageAccountBool')]",
            "name": "[parameters('dataLakeStorageAccountName')]",
            "location": "[parameters('dataLakeStorageAccountLocation')]",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Disabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "[parameters('dataLakeMinimumTlsVersion')]",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": "[variables('storageSupportsHttpsTrafficOnlyBool')]",
                "accessTier": "[parameters('dataLakeStorageAccountAccessTier')]",
                "isHnsEnabled": "[variables('storageIsHnsEnabledBool')]"
            },
            "sku": {
                "name": "[parameters('dataLakeStorageAccountType')]",
                "tier": "Standard"
            },
            "kind": "[parameters('dataLakeStorageAccountKind')]",
            "tags": {},
            "resources": [
				{
					"type": "Microsoft.Storage/storageAccounts/blobServices/containers",
					"apiVersion": "2022-05-01",
                    "condition": "[variables('isNewStorageAccountBool')]",
					"name": "[format('{0}/default/{1}', parameters('dataLakeStorageAccountName'), parameters('dataLakeStorageFilesystemName'))]",
                    "properties": {
                        "publicAccess": "None"
                    },
					"dependsOn": [
		                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('dataLakeStorageAccountName'), 'default')]",
						"[resourceId('Microsoft.Storage/storageAccounts', parameters('dataLakeStorageAccountName'))]"
					]
				}
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "condition": "[variables('isNewFileSystemOnlyBool')]",
            "name": "[parameters('dataLakeStorageFilesystemName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                            "apiVersion": "2022-09-01",
                            "name": "[concat(parameters('dataLakeStorageAccountName'), '/default/', parameters('dataLakeStorageFilesystemName'))]",
                            "properties": {
                                "publicAccess": "None"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('dataLakeStorageAccountName'), 'default')]",
				"[resourceId('Microsoft.Storage/storageAccounts', parameters('dataLakeStorageAccountName'))]"
            ]
        }
    ],
    "outputs": {
        "resourceGroupName": {
            "type": "String",
            "value": "[resourceGroup().name]"
        },
        "resourceGroupLocation": {
            "type": "String",
            "value": "[variables('synapseResourceLocation')]"
        },
        "synapseWorkspaceName": {
            "type": "String",
            "value": "[parameters('name')]"
        },
		"synapseMsiId": {
            "type": "String",
            "value": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('name')), '2021-06-01', 'Full').identity.principalId]"
		},
        "defaultDataLakeStorageAccountName": {
            "type": "String",
            "value": "[parameters('dataLakeStorageAccountName')]"
        },
        "synapseStorageString": {
            "type": "String",
            "value": "[concat(parameters('dataLakeStorageAccountName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', parameters('name'), '/', parameters('dataLakeStorageAccountRoleUniqueId'))))]"
        },
        "webEndpoint": {
            "type": "String",
            "value": "[variables('webEndpoint')]"
        },
        "devEndpoint": {
            "type": "String",
            "value": "[variables('devEndpoint')]"
        },
        "ondemandEndpoint": {
            "type": "String",
            "value": "[variables('ondemandEndpoint')]"
        },
        "sqlEndpoint": {
            "type": "String",
            "value": "[variables('sqlEndpoint')]"
        }
    }
}