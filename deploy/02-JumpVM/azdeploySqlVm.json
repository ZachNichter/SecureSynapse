{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "createJumpVM": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Do you want to create a VM with SSMS and the ability to securely access Synapse Studio?"
        }
      },
      "virtualMachineName": {
        "type": "String",
        "defaultValue": "VM",
        "metadata": {
          "description": "The name of the VM"
        }
      },
      "virtualMachineSize": {
        "type": "String",
        "defaultValue": "Standard_D2ds_v4",
        "metadata": {
          "description": "The virtual machine size."
        }
      },
      "existingVirtualNetworkName": {
        "type": "String",
        "defaultValue": "vnet-customer",
        "metadata": {
          "description": "Specify the name of an existing VNet in the same resource group"
        }
      },
      "existingVnetResourceGroup": {
        "type": "String",
        "defaultValue": "[resourceGroup().name]",
        "metadata": {
          "description": "Specify the resrouce group of the existing VNet"
        }
      },
      "existingSubnetName": {
        "type": "String",
        "defaultValue": "appvm-sub",
        "metadata": {
          "description": "Specify the name of the Subnet Name"
        }
      },
      "imageOffer": {
        "type": "String",
        "defaultValue": "sql2019-ws2019",
        "allowedValues": [
          "sql2019-ws2019",
          "sql2017-ws2019",
          "SQL2017-WS2016",
          "SQL2016SP1-WS2016",
          "SQL2016SP2-WS2016",
          "SQL2014SP3-WS2012R2",
          "SQL2014SP2-WS2012R2"
        ],
        "metadata": {
          "description": "Windows Server and SQL Offer"
        }
      },
      "sqlSku": {
        "type": "String",
        "defaultValue": "SQLDEV",
        "allowedValues": [
          "Standard",
          "Enterprise",
          "SQLDEV",
          "Web",
          "Express"
        ],
        "metadata": {
          "description": "SQL Server Sku"
        }
      },
      "adminUsername": {
        "type": "String",
        "defaultValue": "cloudsa",
        "metadata": {
          "description": "The admin user name of the VM"
        }
      },
      "adminPassword": {
        "type": "SecureString",
        "minLength": 12,
        "metadata": {
          "description": "The admin password of the VM. 12 characters minimum"
        }
      },
      "storageWorkloadType": {
        "type": "String",
        "defaultValue": "General",
        "allowedValues": [
          "General",
          "OLTP",
          "DW"
        ],
        "metadata": {
          "description": "SQL Server Workload Type"
        }
      },
      "sqlDataDisksCount": {
        "type": "int",
        "defaultValue": 1,
        "minValue": 1,
        "maxValue": 8,
        "metadata": {
          "description": "Amount of data disks (128GB each) for SQL Data files"
        }
      },
      "dataPath": {
        "type": "String",
        "defaultValue": "F:\\SQLData",
        "metadata": {
          "description": "Path for SQL Data files. Please choose drive letter from F to Z, and other drives from A to E are reserved for system"
        }
      },
      "sqlLogDisksCount": {
        "type": "int",
        "defaultValue": 1,
        "minValue": 1,
        "maxValue": 8,
        "metadata": {
          "description": "Amount of data disks (128GB each) for SQL Log files"
        }
      },
      "logPath": {
        "type": "String",
        "defaultValue": "G:\\SQLLog",
        "metadata": {
          "description": "Path for SQL Log files. Please choose drive letter from F to Z and different than the one used for SQL data. Drive letter from A to E are reserved for system"
        }
      },
      "location": {
        "type": "String",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      // "uniqueSuffix": "[uniqueString(resourceGroup().id)]",
      // "networkInterfaceName": "[concat(parameters('virtualMachineName'), variables('uniqueSuffix'), '-nic')]",
      // "networkSecurityGroupName": "[concat(parameters('virtualMachineName'), variables('uniqueSuffix'), '-nsg')]",
      "networkInterfaceName": "[concat(parameters('virtualMachineName'), '-nic')]",
      "networkSecurityGroupName": "[concat(parameters('virtualMachineName'), '-nsg')]",
      "networkSecurityGroupRules": [
        {
          "name": "RDP",
          "properties": {
            "priority": 300,
            "protocol": "TCP",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "3389"
          }
        }
      ],
      // "publicIpAddressName": "[concat(parameters('virtualMachineName'), variables('uniqueSuffix'), '-publicip')]",
      "publicIpAddressName": "[concat(parameters('virtualMachineName'), '-publicip')]",
      "publicIpAddressType": "Static",
      "publicIpAddressSku": "Basic",
      "diskConfigurationType": "NEW",
      "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
      "subnetRef": "[resourceID(parameters('existingVNetResourceGroup'), 'Microsoft.Network/virtualNetWorks/subnets', parameters('existingVirtualNetworkName'), parameters('existingSubNetName'))]",
      "dataDisksLuns": "[array(range(0 ,parameters('sqlDataDisksCount')))]",
      "logDisksLuns": "[array(range(parameters('sqlDataDisksCount'), parameters('sqlLogDisksCount')))]",
      "dataDisks": {
        "createOption": "empty",
        "caching": "ReadOnly",
        "writeAcceleratorEnabled": false,
        "storageAccountType": "Standard_LRS",
        "diskSizeGB": 127
      },
      "tempDbPath": "D:\\SQLTemp"
    },
    "resources": [
      {
        "condition": "[parameters('createJumpVM')]",
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2020-06-01",
        "name": "[variables('publicIpAddressName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[variables('publicIpAddressSku')]"
        },
        "properties": {
          "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
        }
      },
      {
        "condition": "[parameters('createJumpVM')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-06-01",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": "[variables('networkSecurityGroupRules')]"
        }
      },
      {
        "condition": "[parameters('createJumpVM')]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-06-01",
        "name": "[variables('networkInterfaceName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
          "[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                }
              }
            }
          ],
          "enableAcceleratedNetworking": true,
          "networkSecurityGroup": {
            "id": "[variables('nsgId')]"
          }
        }
      },
      {
        "condition": "[parameters('createJumpVM')]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-06-01",
        "name": "[parameters('virtualMachineName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('virtualMachineSize')]"
          },
          "storageProfile": {
            "osDisk": {
              "createOption": "fromImage",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            },
            "imageReference": {
              "publisher": "MicrosoftSQLServer",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('sqlSku')]",
              "version": "latest"
            },
            "copy": [
              {
                "name": "dataDisks",
                "count": "[add(parameters('sqlDataDisksCount'), parameters('sqlLogDisksCount'))]",
                "input": {
                  "lun": "[copyIndex('dataDisks')]",
                  "createOption": "[variables('dataDisks').createOption]",
                  "caching": "[if(greaterOrEquals(copyIndex('dataDisks'), parameters('sqlDataDisksCount')) ,'None', variables('dataDisks').caching )]",
                  "writeAcceleratorEnabled": "[variables('dataDisks').writeAcceleratorEnabled]",
                  "diskSizeGB": "[variables('dataDisks').diskSizeGB]",
                  "managedDisk": {
                    "storageAccountType": "[variables('dataDisks').storageAccountType]"
                  }
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              }
            ]
          },
          "osProfile": {
            "computerName": "[parameters('virtualMachineName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "windowsConfiguration": {
              "enableAutomaticUpdates": true,
              "provisionVmAgent": true
            }
          }
        }
      },
      {
        "condition": "[parameters('createJumpVM')]",
        "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachines",
        "apiVersion": "2017-03-01-preview",
        "name": "[parameters('virtualMachineName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
        ],
        "properties": {
          "virtualMachineResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]",
          "sqlManagement": "Full",
          "SqlServerLicenseType": "PAYG",
          "StorageConfigurationSettings": {
            "DiskConfigurationType": "[variables('diskConfigurationType')]",
            "StorageWorkloadType": "[parameters('storageWorkloadType')]",
            "SQLDataSettings": {
              "LUNs": "[variables('dataDisksLUNs')]",
              "DefaultFilePath": "[parameters('dataPath')]"
            },
            "SQLLogSettings": {
              "Luns": "[variables('logDisksLUNs')]",
              "DefaultFilePath": "[parameters('logPath')]"
            },
            "SQLTempDbSettings": {
              "DefaultFilePath": "[variables('tempDbPath')]"
            }
          }
        }
      }
    ],
    "outputs": {
      "vmName": {
        "type": "string",
        "value": "[parameters('virtualMachineName')]"
      },
      "vmSize": {
        "type": "string",
        "value": "[parameters('virtualMachineSize')]"
      },
      "adminUsername": {
        "type": "String",
        "value": "[parameters('adminUsername')]"
      },
      "vmIPAddress": {
        "type": "string",
        "value": "[reference(variables('publicIpAddressName'), '2020-05-01').IpAddress]"
      }
    }
  }